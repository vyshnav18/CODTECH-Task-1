AUTHOR -> D NAGA VYSHNAV

#!/usr/bin/env python3
import os
import hashlib
import json
from datetime import datetime

def compute_hash(filepath):
    sha256_hash = hashlib.sha256()
    try:
        with open(filepath, "rb") as f:
            for byte_block in iter(lambda: f.read(4096), b""):
                sha256_hash.update(byte_block)
        return sha256_hash.hexdigest()
    except FileNotFoundError:
        return None

def load_baseline(filename='file_hashes.json'):
    if os.path.exists(filename):
        with open(filename, 'r') as f:
            return json.load(f)
    return {}

def save_baseline(data, filename='file_hashes.json'):
    with open(filename, 'w') as f:
        json.dump(data, f, indent=4)

def check_file_integrity(target_dir):
    current_hashes = {}
    changes_detected = False
    baseline_hashes = load_baseline()

    print(f"\nüïµÔ∏è File Integrity Check Started - {datetime.now()}")
    for root, dirs, files in os.walk(target_dir):
        for file in files:
            filepath = os.path.join(root, file)
            current_hash = compute_hash(filepath)
            current_hashes[filepath] = current_hash

            baseline_hash = baseline_hashes.get(filepath)
            if baseline_hash is None:
                print(f"[NEW] File added: {filepath}")
                changes_detected = True
            elif current_hash != baseline_hash:
                print(f"[MODIFIED] File changed: {filepath}")
                changes_detected = True

    for filepath in baseline_hashes:
        if filepath not in current_hashes:
            print(f"[DELETED] File missing: {filepath}")
            changes_detected = True

    save_baseline(current_hashes)

    if not changes_detected:
        print("‚úÖ No changes detected.")

# RUN IT
check_file_integrity("/home/kali/Documents/monitor")





